import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:shoe_store/data/repository/product_reponsitory.dart';

import 'product_state.dart';

class ProductCubit extends Cubit<ProductState> {
  final ProductRepository productRepository;

  ProductCubit({required this.productRepository}) : super(ProductState());

  Future<void> loadProducts() async {
    print("üì¢ [ProductCubit] - B·∫Øt ƒë·∫ßu t·∫£i danh s√°ch s·∫£n ph·∫©m...");
    emit(state.copyWith(isLoading: true));

    final products = await productRepository.fetchProducts();

    if (products.isNotEmpty) {
      print("‚úÖ [ProductCubit] - ƒê√£ t·∫£i ƒë∆∞·ª£c ${products.length} s·∫£n ph·∫©m.");
      emit(state.copyWith(isLoading: false, products: products));
    } else {
      print("‚ùå [ProductCubit] - Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë·ªÉ hi·ªÉn th·ªã.");
      emit(state.copyWith(isLoading: false, products: []));
    }
  }
}
